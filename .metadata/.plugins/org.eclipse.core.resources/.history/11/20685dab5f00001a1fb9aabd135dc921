package com.StudentClient;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.client.RestTemplate;

import com.StudentClient.beans.Student;
import com.StudentClient.repo.StudentRepo;
import com.StudentClient.service.StudentService;

@RunWith(SpringRunner.class)
@SpringBootTest
public class StudentClientApplicationTests {
	
	@Autowired
	private StudentService service;
	
	@Autowired
	private StudentRepo repo;
	
	@Test
	public void contextLoads() {
	}
	
	@Test
	public void testgetStudentListSuccess() throws URISyntaxException 
	{
		RestTemplate rest_template=new RestTemplate();
		final String url="http://10.44.50.37:8084/student_ru/student/";
		URI uri=new URI(url);
		ResponseEntity<String> entity=rest_template.getForEntity(uri, String.class);
		
		
		List<Student> studList= repo.findAll();
		List<String> studNames=new ArrayList<String>();
		boolean flag=true;
		
		for(Student student: studList)
		{
			if(!entity.getBody().contains(student.getName()))
			{
				flag=false;
				break;
			}
		}
		
		
		System.out.println("\n\n\n");
		System.out.println(repo.findAll().toString()+"\n"+entity.getBody().toString());
		System.out.println("\n\n\n");
		String[] ar=entity.getStatusCode().toString().split(" ");
		Assert.assertEquals("200", ar[0]);
		Assert.assertEquals(true, flag);
	}
	
	
	@Test
	public void updateStudentSuccess() throws URISyntaxException 
	{
		//put
		
		RestTemplate rest_template=new RestTemplate();
		final String url="http://10.44.50.37:8084/student_ru/student/update ";
		URI uri=new URI(url);
		Student stud=new Student(3,"opkupdated3","onkarl3232",null,0,null,null);
		HttpHeaders headers = new HttpHeaders();
	    HttpEntity<Student> request = new HttpEntity<>(stud, headers);
	    rest_template.put(uri, request);
	    
	    //check
	    
	    final String url1="http://10.44.50.37:8084/student_ru/student/";
		URI uri1=new URI(url1);
		ResponseEntity<String> entity=rest_template.getForEntity(uri1, String.class);
		List<Student> studList= repo.findAll();
		List<String> studNames=new ArrayList<String>();
		boolean flag=true;
		
		for(Student student: studList)
		{
			if(!entity.getBody().contains(student.getName()))
			{
				flag=false;
				break;
			}
		}
	    
	    
	    
	    
	    
	    
		
		
	}
	

}
